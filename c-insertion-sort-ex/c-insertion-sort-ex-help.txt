                                                                     Page 1
                         Data Dictionary Summary Report
===============================================================================

arr   (Local Object)
   [insertion_sort_test.c, 27]

arr   (Parameter)
   [print_array.c, 19]

arr   (Parameter)
   [insertion_sort.c, 17]

arr   (Local Object)
   [array_sorting.c, 22]

arr1   (Parameter)
   [compare_array.c, 21]

arr2   (Parameter)
   [compare_array.c, 21]

array_size   (Macro)
   [insertion_sort.h, 13]

array_sorting   (Function)
   [array_sorting.c, 17]

compare_array   (Function)
   [compare_array.c, 21]

flag   (Local Object)
   [insertion_sort_test.c, 21]

flag   (Local Object)
   [compare_array.c, 23]

i   (Local Object)
   [print_array.c, 21]

i   (Local Object)
   [insertion_sort.c, 21]

i   (Local Object)
   [array_sorting.c, 21]

i   (Local Object)
   [compare_array.c, 23]

i   (Local Object)
   [insertion_sort_test_rand.c, 23]

insertion_sort   (Function)
   [insertion_sort.c, 17]

INSERTION_SORT_H_   (Macro)
   [insertion_sort.h, 11]
                                                                     Page 2
                         Data Dictionary Summary Report
===============================================================================

insertion_sort_test   (Function)
   [insertion_sort_test.c, 19]

insertion_sort_test_rand   (Function)
   [insertion_sort_test_rand.c, 19]

j   (Local Object)
   [insertion_sort.c, 21]

key   (Local Object)
   [insertion_sort.c, 21]

main   (Function)
   [main.c, 17]

n   (Local Object)
   [insertion_sort_test.c, 31]

n   (Parameter)
   [print_array.c, 19]

n   (Parameter)
   [insertion_sort.c, 17]

n   (Parameter)
   [compare_array.c, 21]

print_array   (Function)
   [print_array.c, 19]

printf   (Function)

rand   (Function)

rand_arr_size   (Macro)
   [insertion_sort.h, 14]

scanf   (Function)

sorted_arr   (Local Object)
   [insertion_sort_test.c, 45]

test_input_arr   (Local Object)
   [insertion_sort_test_rand.c, 23]

value   (Local Object)
   [main.c, 19]
                                                                     Page 3
                              File Contents Report
===============================================================================

array_sorting.c
  Global Functions
    array_sorting

compare_array.c
  Global Functions
    compare_array

insertion_sort.c
  Global Functions
    insertion_sort

insertion_sort.h
  Functions
    array_sorting
    compare_array
    insertion_sort
    insertion_sort_test
    insertion_sort_test_rand
    print_array

insertion_sort_test.c
  Global Functions
    insertion_sort_test

insertion_sort_test_rand.c
  Global Functions
    insertion_sort_test_rand

main.c
  Global Functions
    main

print_array.c
  Global Functions
    print_array
                                                                     Page 4
                      Program Unit Cross Reference Report
===============================================================================

array_sorting   (Function)
  Declared as: int
    Define [array_sorting.c, 17]     array_sorting.c
    Call [main.c, 31]                main
    Declare [insertion_sort.h, 20]   insertion_sort.h

compare_array   (Function)
  Declared as: int
    Define [compare_array.c, 21]     compare_array.c
    Call [insertion_sort_test.c, 55]   insertion_sort_test
    Declare [insertion_sort.h, 18]   insertion_sort.h

insertion_sort   (Function)
  Declared as: void
    Define [insertion_sort.c, 17]    insertion_sort.c
    Call [insertion_sort_test.c, 40]   insertion_sort_test
    Call [array_sorting.c, 40]       array_sorting
    Declare [insertion_sort.h, 16]   insertion_sort.h
    Call [insertion_sort_test_rand.c, 40]   insertion_sort_test_rand

insertion_sort_test   (Function)
  Declared as: void
    Define [insertion_sort_test.c, 19]   insertion_sort_test.c
    Call [main.c, 26]                main
    Declare [insertion_sort.h, 19]   insertion_sort.h

insertion_sort_test_rand   (Function)
  Declared as: int
    Define [insertion_sort_test_rand.c, 19]   insertion_sort_test_rand.c
    Call [main.c, 36]                main
    Declare [insertion_sort.h, 21]   insertion_sort.h

main   (Function)
  Declared as: int
    Define [main.c, 17]              main.c

print_array   (Function)
  Declared as: void
    Define [print_array.c, 19]       print_array.c
    Call [insertion_sort_test.c, 33]   insertion_sort_test
    Call [insertion_sort_test.c, 50]   insertion_sort_test
    Call [insertion_sort_test.c, 52]   insertion_sort_test
    Call [array_sorting.c, 34]       array_sorting
    Call [array_sorting.c, 45]       array_sorting
    Declare [insertion_sort.h, 17]   insertion_sort.h
    Call [insertion_sort_test_rand.c, 34]   insertion_sort_test_rand
    Call [insertion_sort_test_rand.c, 45]   insertion_sort_test_rand

printf   (Function)
  Declared as: int
    Call [insertion_sort_test.c, 22]   insertion_sort_test
    Call [insertion_sort_test.c, 32]   insertion_sort_test
    Call [insertion_sort_test.c, 46]   insertion_sort_test
    Call [insertion_sort_test.c, 51]   insertion_sort_test
    Call [insertion_sort_test.c, 58]   insertion_sort_test
                                                                     Page 5
                      Program Unit Cross Reference Report
===============================================================================
    Call [insertion_sort_test.c, 61]   insertion_sort_test
    Call [main.c, 20]                main
    Call [main.c, 39]                main
    Call [print_array.c, 23]         print_array
    Call [print_array.c, 24]         print_array
    Call [array_sorting.c, 23]       array_sorting
    Call [array_sorting.c, 25]       array_sorting
    Call [array_sorting.c, 31]       array_sorting
    Call [array_sorting.c, 44]       array_sorting
    Call [insertion_sort_test_rand.c, 24]   insertion_sort_test_rand
    Call [insertion_sort_test_rand.c, 31]   insertion_sort_test_rand
    Call [insertion_sort_test_rand.c, 44]   insertion_sort_test_rand

rand   (Function)
  Declared as: int
    Call [insertion_sort_test_rand.c, 26]   insertion_sort_test_rand

scanf   (Function)
  Declared as: int
    Call [main.c, 21]                main
    Call [array_sorting.c, 27]       array_sorting
                                                                     Page 6
                         Object Cross Reference Report
===============================================================================

arr   (Local Object)
  Declared as: int [6]={...}
    Define [insertion_sort_test.c, 27]   insertion_sort_test
    Init [insertion_sort_test.c, 27]   insertion_sort_test
    Use [insertion_sort_test.c, 31]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 31]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 33]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 40]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 50]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 55]   insertion_sort_test

arr   (Parameter)
  Declared as: int *
    Define [print_array.c, 19]       print_array
    Deref Use [print_array.c, 23]    print_array

arr   (Parameter)
  Declared as: int *
    Define [insertion_sort.c, 17]    insertion_sort
    Deref Use [insertion_sort.c, 24]   insertion_sort
    Deref Use [insertion_sort.c, 31]   insertion_sort
    Deref Use [insertion_sort.c, 33]   insertion_sort
    Deref Set [insertion_sort.c, 33]   insertion_sort
    Deref Set [insertion_sort.c, 36]   insertion_sort

arr   (Local Object)
  Declared as: int [10]
    Define [array_sorting.c, 22]     array_sorting
    Deref Use [array_sorting.c, 27]   array_sorting
    Use [array_sorting.c, 34]        array_sorting
    Use [array_sorting.c, 40]        array_sorting
    Use [array_sorting.c, 45]        array_sorting

arr1   (Parameter)
  Declared as: int *
    Define [compare_array.c, 21]     compare_array
    Deref Use [compare_array.c, 26]   compare_array

arr2   (Parameter)
  Declared as: int *
    Define [compare_array.c, 21]     compare_array
    Deref Use [compare_array.c, 26]   compare_array

flag   (Local Object)
  Declared as: int
    Define [insertion_sort_test.c, 21]   insertion_sort_test
    Set [insertion_sort_test.c, 55]   insertion_sort_test
    Use [insertion_sort_test.c, 57]   insertion_sort_test

flag   (Local Object)
  Declared as: int=0
    Define [compare_array.c, 23]     compare_array
    Init [compare_array.c, 23]       compare_array
    Set [compare_array.c, 27]        compare_array
    Return [compare_array.c, 29]     compare_array
                                                                     Page 7
                         Object Cross Reference Report
===============================================================================

i   (Local Object)
  Declared as: int
    Define [print_array.c, 21]       print_array
    Set [print_array.c, 22]          print_array
    Use [print_array.c, 22]          print_array
    Modify [print_array.c, 22]       print_array
    Use [print_array.c, 23]          print_array

i   (Local Object)
  Declared as: int
    Define [insertion_sort.c, 21]    insertion_sort
    Set [insertion_sort.c, 25]       insertion_sort
    Use [insertion_sort.c, 31]       insertion_sort
    Use [insertion_sort.c, 31]       insertion_sort
    Use [insertion_sort.c, 33]       insertion_sort
    Use [insertion_sort.c, 33]       insertion_sort
    Use [insertion_sort.c, 34]       insertion_sort
    Set [insertion_sort.c, 34]       insertion_sort
    Use [insertion_sort.c, 36]       insertion_sort

i   (Local Object)
  Declared as: int
    Define [array_sorting.c, 21]     array_sorting
    Set [array_sorting.c, 26]        array_sorting
    Use [array_sorting.c, 26]        array_sorting
    Modify [array_sorting.c, 26]     array_sorting
    Use [array_sorting.c, 27]        array_sorting

i   (Local Object)
  Declared as: int
    Define [compare_array.c, 23]     compare_array
    Set [compare_array.c, 24]        compare_array
    Use [compare_array.c, 24]        compare_array
    Modify [compare_array.c, 24]     compare_array
    Use [compare_array.c, 26]        compare_array
    Use [compare_array.c, 26]        compare_array

i   (Local Object)
  Declared as: int
    Define [insertion_sort_test_rand.c, 23]   insertion_sort_test_rand
    Set [insertion_sort_test_rand.c, 25]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 25]   insertion_sort_test_rand
    Modify [insertion_sort_test_rand.c, 25]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 26]   insertion_sort_test_rand

j   (Local Object)
  Declared as: int
    Define [insertion_sort.c, 21]    insertion_sort
    Set [insertion_sort.c, 22]       insertion_sort
    Use [insertion_sort.c, 22]       insertion_sort
    Modify [insertion_sort.c, 22]    insertion_sort
    Use [insertion_sort.c, 24]       insertion_sort
    Use [insertion_sort.c, 25]       insertion_sort
                                                                     Page 8
                         Object Cross Reference Report
===============================================================================

key   (Local Object)
  Declared as: int
    Define [insertion_sort.c, 21]    insertion_sort
    Set [insertion_sort.c, 24]       insertion_sort
    Use [insertion_sort.c, 31]       insertion_sort
    Use [insertion_sort.c, 36]       insertion_sort

n   (Local Object)
  Declared as: int=sizeof(arr)/sizeof(arr[0])
    Define [insertion_sort_test.c, 31]   insertion_sort_test
    Init [insertion_sort_test.c, 31]   insertion_sort_test
    Use [insertion_sort_test.c, 33]   insertion_sort_test
    Use [insertion_sort_test.c, 40]   insertion_sort_test
    Use [insertion_sort_test.c, 50]   insertion_sort_test
    Use [insertion_sort_test.c, 52]   insertion_sort_test
    Use [insertion_sort_test.c, 55]   insertion_sort_test

n   (Parameter)
  Declared as: int
    Define [print_array.c, 19]       print_array
    Use [print_array.c, 22]          print_array

n   (Parameter)
  Declared as: int
    Define [insertion_sort.c, 17]    insertion_sort
    Use [insertion_sort.c, 22]       insertion_sort

n   (Parameter)
  Declared as: int
    Define [compare_array.c, 21]     compare_array
    Use [compare_array.c, 24]        compare_array

sorted_arr   (Local Object)
  Declared as: int [6]={...}
    Define [insertion_sort_test.c, 45]   insertion_sort_test
    Init [insertion_sort_test.c, 45]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 52]   insertion_sort_test
    Deref Use [insertion_sort_test.c, 55]   insertion_sort_test

test_input_arr   (Local Object)
  Declared as: int [100]
    Define [insertion_sort_test_rand.c, 23]   insertion_sort_test_rand
    Deref Set [insertion_sort_test_rand.c, 26]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 34]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 40]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 45]   insertion_sort_test_rand

value   (Local Object)
  Declared as: int
    Define [main.c, 19]              main
    Addr Use [main.c, 21]            main
    Use [main.c, 23]                 main
                                                                     Page 9
                          Type Cross Reference Report
===============================================================================
                                                                     Page 10
                          Macro Cross Reference Report
===============================================================================

array_size
  Declared as: 10
    Define [insertion_sort.h, 13]    insertion_sort.h
    Use [array_sorting.c, 22]        array_sorting
    Use [array_sorting.c, 26]        array_sorting
    Use [array_sorting.c, 34]        array_sorting
    Use [array_sorting.c, 40]        array_sorting
    Use [array_sorting.c, 45]        array_sorting

INSERTION_SORT_H_
  Declared as: 
    Define [insertion_sort.h, 11]    insertion_sort.h
    Use [insertion_sort.h, 10]       insertion_sort.h

rand_arr_size
  Declared as: 100
    Define [insertion_sort.h, 14]    insertion_sort.h
    Use [insertion_sort_test_rand.c, 23]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 25]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 34]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 40]   insertion_sort_test_rand
    Use [insertion_sort_test_rand.c, 45]   insertion_sort_test_rand
                                                                     Page 11
                      Include File Cross Reference Report
===============================================================================

insertion_sort.h
    Include [insertion_sort_test.c, 16]   insertion_sort_test.c
    Include [main.c, 15]             main.c
    Include [print_array.c, 16]      print_array.c
    Include [insertion_sort.c, 15]   insertion_sort.c
    Include [array_sorting.c, 15]    array_sorting.c
    Include [compare_array.c, 18]    compare_array.c
    Include [insertion_sort_test_rand.c, 15]   insertion_sort_test_rand.c

stdio.h
    Include [insertion_sort_test.c, 15]   insertion_sort_test.c
    Include [main.c, 14]             main.c
    Include [print_array.c, 15]      print_array.c
    Include [array_sorting.c, 14]    array_sorting.c
    Include [compare_array.c, 17]    compare_array.c
    Include [insertion_sort_test_rand.c, 14]   insertion_sort_test_rand.c

stdlib.h
    Include [insertion_sort_test_rand.c, 16]   insertion_sort_test_rand.c
                                                                     Page 12
                         Simple Invocation Tree Report
===============================================================================

array_sorting
| printf
| scanf
| print_array
| insertion_sort

insertion_sort_test
| printf
| print_array
| insertion_sort
| compare_array

insertion_sort_test_rand
| printf
| rand
| print_array
| insertion_sort

main
| printf
| scanf
| insertion_sort_test
| array_sorting
| insertion_sort_test_rand

print_array
| printf
                                                                     Page 13
                         Program Unit Complexity Report
===============================================================================

array_sorting
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

compare_array
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 3
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        3

insertion_sort
   Cyclomatic:                        3
   Modified Cyclomatic:               3
   Strict Cyclomatic:                 4
   Essential:                         1
   Max Nesting:                       2
   Count Path:                        3

insertion_sort_test
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

insertion_sort_test_rand
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2

main
   Cyclomatic:                        4
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 4
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        4

print_array
   Cyclomatic:                        2
   Modified Cyclomatic:               2
   Strict Cyclomatic:                 2
   Essential:                         1
   Max Nesting:                       1
   Count Path:                        2
                                                                     Page 14
                         Project Metrics Summary Report
===============================================================================
Classes:                      0
Files:                        8
Program Units:                7
Lines:                      337
Lines Blank:                 80
Lines Code:                 103
Lines Comment:              136
Lines Inactive:               0
Executable Statements:       69
Declarative Statements:      24
Ratio Comment/Code:        1.32
                                                                     Page 15
                              Program Unit Metrics
===============================================================================

array_sorting (Function)
   Lines:                   32
   Comment Lines:           8
   Blank Lines:             10
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   10
   Declarative Code Lines:  3
   Execution Statements:    12
   Declaration Statements:  2
   Ratio Comment/Code:      0.57

compare_array (Function)
   Lines:                   10
   Comment Lines:           0
   Blank Lines:             1
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    6
   Declaration Statements:  1
   Ratio Comment/Code:      0.00

insertion_sort (Function)
   Lines:                   22
   Comment Lines:           4
   Blank Lines:             4
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  2
   Execution Statements:    9
   Declaration Statements:  1
   Ratio Comment/Code:      0.29

insertion_sort_test (Function)
   Lines:                   46
   Comment Lines:           13
   Blank Lines:             12
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  5
   Execution Statements:    12
   Declaration Statements:  4
   Ratio Comment/Code:      0.62

insertion_sort_test_rand (Function)
   Lines:                   30
   Comment Lines:           8
   Blank Lines:             9
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  2
   Execution Statements:    11
   Declaration Statements:  1
   Ratio Comment/Code:      0.62
                                                                     Page 16
                              Program Unit Metrics
===============================================================================

main (Function)
   Lines:                   26
   Comment Lines:           3
   Blank Lines:             4
   Code Lines:              19
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  2
   Execution Statements:    14
   Declaration Statements:  1
   Ratio Comment/Code:      0.16

print_array (Function)
   Lines:                   7
   Comment Lines:           0
   Blank Lines:             0
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    5
   Declaration Statements:  1
   Ratio Comment/Code:      0.00
                                                                     Page 17
                                  File Metrics
===============================================================================

array_sorting.c
   Lines:                   48
   Comment Lines:           20
   Blank Lines:             12
   Preprocessor Lines:      2
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   10
   Declarative Code Lines:  3
   Execution Statements:    12
   Declaration Statements:  3
   Ratio Comment/Code:      1.43
   Units                    1

compare_array.c
   Lines:                   39
   Comment Lines:           15
   Blank Lines:             13
   Preprocessor Lines:      2
   Code Lines:              9
   Inactive Lines:          0
   Executable Code Lines:   5
   Declarative Code Lines:  2
   Execution Statements:    6
   Declaration Statements:  2
   Ratio Comment/Code:      1.67
   Units                    1

insertion_sort.c
   Lines:                   38
   Comment Lines:           17
   Blank Lines:             6
   Preprocessor Lines:      1
   Code Lines:              14
   Inactive Lines:          0
   Executable Code Lines:   7
   Declarative Code Lines:  2
   Execution Statements:    9
   Declaration Statements:  2
   Ratio Comment/Code:      1.21
   Units                    1

insertion_sort.h
   Lines:                   23
   Comment Lines:           9
   Blank Lines:             4
   Preprocessor Lines:      5
   Code Lines:              6
   Inactive Lines:          0
   Executable Code Lines:   0
   Declarative Code Lines:  6
   Execution Statements:    0
   Declaration Statements:  6
   Ratio Comment/Code:      1.50
   Units                    0
                                                                     Page 18
                                  File Metrics
===============================================================================

insertion_sort_test.c
   Lines:                   67
   Comment Lines:           26
   Blank Lines:             18
   Preprocessor Lines:      2
   Code Lines:              21
   Inactive Lines:          0
   Executable Code Lines:   16
   Declarative Code Lines:  5
   Execution Statements:    12
   Declaration Statements:  5
   Ratio Comment/Code:      1.24
   Units                    1

insertion_sort_test_rand.c
   Lines:                   48
   Comment Lines:           20
   Blank Lines:             12
   Preprocessor Lines:      3
   Code Lines:              13
   Inactive Lines:          0
   Executable Code Lines:   9
   Declarative Code Lines:  2
   Execution Statements:    11
   Declaration Statements:  2
   Ratio Comment/Code:      1.54
   Units                    1

main.c
   Lines:                   46
   Comment Lines:           15
   Blank Lines:             10
   Preprocessor Lines:      2
   Code Lines:              19
   Inactive Lines:          0
   Executable Code Lines:   15
   Declarative Code Lines:  2
   Execution Statements:    14
   Declaration Statements:  2
   Ratio Comment/Code:      0.79
   Units                    1

print_array.c
   Lines:                   28
   Comment Lines:           14
   Blank Lines:             5
   Preprocessor Lines:      2
   Code Lines:              7
   Inactive Lines:          0
   Executable Code Lines:   3
   Declarative Code Lines:  2
   Execution Statements:    5
   Declaration Statements:  2
   Ratio Comment/Code:      2.00
   Units                    1
                                                                     Page 19
                          File Average Metrics Report
===============================================================================

array_sorting.c
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              32
   Code                               14
   Comment                            8
   Blank                              10

compare_array.c
   Cyclomatic                         3
   Modified                           3
   Strict                             3
   Essential                          1
   Lines                              10
   Code                               9
   Comment                            0
   Blank                              1

insertion_sort.c
   Cyclomatic                         3
   Modified                           3
   Strict                             4
   Essential                          1
   Lines                              22
   Code                               14
   Comment                            4
   Blank                              4

insertion_sort.h
   Cyclomatic                         0
   Modified                           0
   Strict                             0
   Essential                          0
   Lines                              0
   Code                               0
   Comment                            0
   Blank                              0

insertion_sort_test.c
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              46
   Code                               21
   Comment                            13
   Blank                              12

insertion_sort_test_rand.c
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              30
   Code                               13
   Comment                            8
   Blank                              9
                                                                     Page 20
                          File Average Metrics Report
===============================================================================

main.c
   Cyclomatic                         4
   Modified                           2
   Strict                             4
   Essential                          1
   Lines                              26
   Code                               19
   Comment                            3
   Blank                              4

print_array.c
   Cyclomatic                         2
   Modified                           2
   Strict                             2
   Essential                          1
   Lines                              7
   Code                               7
   Comment                            0
   Blank                              0
                                                                     Page 21
                              Class Metrics Report
===============================================================================
                                                                     Page 22
                            Class OO Metrics Report
===============================================================================
                                                                     Page 23
                           Uninitialized Items Report

  Def: Items that have not been given an initial value at point of definition.
===============================================================================

array_sorting.c      Line
    arr                22
    i                  21

compare_array.c      Line
    i                  23

insertion_sort.c     Line
    i                  21
    j                  21
    key                21

insertion_sort_test.c Line
    flag               21

insertion_sort_test_rand.c Line
    i                  23
    test_input_arr     23

main.c               Line
    value              19

print_array.c        Line
    i                  21
                                                                     Page 24
                          Unused Objects and Functions

Def: A variable that is not read from, written to after declaration, 
or passed to a function, function parameters that are unused in the function, 
and functions that have no invocations. 
===============================================================================

main.c                  Line
    main - Function       17
                                                                     Page 25
                             Unused Objects Report
===============================================================================
                                                                     Page 26
                              Unused Types Report
===============================================================================
                                                                     Page 27
                          Unused Program Units Report
===============================================================================

main.c
    main     17
